# -*- coding: utf-8 -*-
"""function_extract_transition_probabilities.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xHPNgk0fIxmw2GgZj543-ams6Lc5hsIU
"""

def extract_transition_probabilities(actions,p_data):
  # For every target 
  df_list = []
  df_cols = ['target','result','transition_prob']

  for target in actions: 
    x = actions[target]['gaussian_centroid'][0] + 170
    y = actions[target]['gaussian_centroid'][1] + 170

    # Board Segments
    for i in range(0,p_data['prob_grid_singlescore'].shape[2]):

      # Singles
      s_result = 'S' + str(i+1)
      df_list.append([target, s_result, p_data['prob_grid_singlescore'][x,y,i]])

      # Doubles
      d_result = 'D' + str(i+1)
      df_list.append([target, d_result, p_data['prob_grid_doublescore'][x,y,i]])

      # Triples
      t_result = 'T' + str(i+1)
      df_list.append([target, t_result, p_data['prob_grid_triplescore'][x,y,i]])
    
    # Bullseyes
    df_list.append([target, 'SB', p_data['prob_grid_bullscore'][x,y,0]])
    df_list.append([target, 'DB', p_data['prob_grid_bullscore'][x,y,1]])
    
  # Combine into data frame
  df = pd.DataFrame(df_list, columns=df_cols)
  df['transition_prob']=np.minimum(1,df['transition_prob'])

  # Define miss probability as 1 - hit probability
  df_miss = 1 - df.groupby('target').sum('transition_prob')
  df_miss['transition_prob']=np.maximum(0,df_miss['transition_prob'])

  # Add miss probabilities
  for target in actions:
    df_list.append([target, 'missed', df_miss.loc[target][0]])
  
  # Return final dataframe
  final_df = pd.DataFrame(df_list, columns=df_cols)
  
  return final_df